configs:
  grafana_admin_password:
    file: ./grafana/admin_password

networks:
  swarm_overlay:
    name: swarm_overlay
    external: true

services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ['--config', '/etc/otel/config.yaml']
    user: '${UID}:${GID}'
    volumes:
      - ./collector/config.yaml:/etc/otel/config.yaml:ro
      - ./collector/data:/var/lib/otel/data
    networks:
      - swarm_overlay
    ports:
      - target: 4317
        published: 4317
        mode: host
      - target: 4318
        published: 4318
        mode: host
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == meupc
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
      restart_policy:
        condition: on-failure

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/config.yml
    user: '${UID}:${GID}'
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml:ro
      - ./loki/data:/tmp/loki
    networks:
      - swarm_overlay
    deploy:
      placement:
        constraints:
          - node.hostname == meupc
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  tempo:
    image: grafana/tempo:latest
    command: -config.file=/etc/tempo/config.yml
    user: '${UID}:${GID}'
    volumes:
      - ./tempo/config.yml:/etc/tempo/config.yml:ro
      - ./tempo/data:/tmp/tempo
    networks:
      - swarm_overlay
    deploy:
      placement:
        constraints:
          - node.hostname == meupc
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  prometheus:
    image: prom/prometheus:latest
    user: '${UID}:${GID}'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/data:/prometheus
    networks:
      - swarm_overlay
    deploy:
      placement:
        constraints:
          - node.hostname == meupc
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  grafana:
    image: grafana/grafana:latest
    user: '${UID}:${GID}'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_admin_password
    configs:
      - source: grafana_admin_password
        target: /run/secrets/grafana_admin_password
    volumes:
      - ./grafana/data:/var/lib/grafana
    networks:
      - swarm_overlay
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=Host(`grafana.meupc.test`)'
      - 'traefik.http.routers.grafana.entrypoints=websecure'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
    deploy:
      placement:
        constraints:
          - node.hostname == meupc
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
